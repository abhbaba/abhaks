apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |-
    apiVersion: 1
    deleteDatasources:
      - name: Prometheus
        orgId: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://kube-prom-stack-kube-prome-prometheus.monitoring.svc.cluster.local:9090
        isDefault: true
        editable: true
        jsonData:
          timeInterval: "15s"

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    app: grafana

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD__FILE
              value: /etc/grafana-secrets/grafana-admin-password
            - name: GF_SERVER_ROOT_URL
              value: "http://172.190.133.2/grafana"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            # Enable reporting and image rendering
            - name: GF_RENDERING_SERVER_URL
              value: "http://localhost:8081/render"
            - name: GF_RENDERING_CALLBACK_URL
              value: "http://localhost:3000/"
            - name: GF_LOG_FILTERS
              value: "rendering:debug"
            - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
              value: "grafana-image-renderer"
            - name: GF_FEATURE_TOGGLES_ENABLE
              value: "publicDashboards,reporting"
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
          volumeMounts:
            - name: grafana-kv
              mountPath: /etc/grafana-secrets
              readOnly: true
            - name: grafana-datasources-config
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
        - name: grafana-image-renderer
          image: grafana/grafana-image-renderer:3.9.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: ENABLE_METRICS
              value: "true"
            - name: IGNORE_HTTPS_ERRORS
              value: "true"
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: grafana-kv
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "grafana-kv"
        - name: grafana-datasources-config
          configMap:
            name: grafana-datasources
            items:
              - key: datasources.yaml
                path: datasources.yaml